name: Blog Preview Link Commenter

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  comment-preview:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find blog slug
        id: find-slug
        run: |
          # Get changed files, handle potential errors
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} 2>/dev/null || echo "")

          if [ -z "$CHANGED_FILES" ]; then
            echo "message=No blog content changes detected!" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Look for new blog folders or changes in _blog.yml
          if echo "$CHANGED_FILES" | grep -q "^blogs/.*/content.md$"; then
            # Extract folder name from changed content.md
            SLUG=$(echo "$CHANGED_FILES" | grep "^blogs/.*/content.md$" | head -n 1 | cut -d'/' -f2)
            if [ -n "$SLUG" ]; then
              echo "slug=$SLUG" >> $GITHUB_OUTPUT
              # Check if this is a new blog or edit
              if git ls-tree -r --name-only ${{ github.event.pull_request.base.sha }} | grep -q "^blogs/$SLUG/"; then
                echo "message=Edits in existing blog detected: \`$SLUG\`" >> $GITHUB_OUTPUT
              else
                echo "message=New blog detected: \`$SLUG\`" >> $GITHUB_OUTPUT
              fi
            else
              echo "message=No blog content changes detected!" >> $GITHUB_OUTPUT
            fi
          elif echo "$CHANGED_FILES" | grep -q "^_blog.yml$"; then
            # If _blog.yml changed, get the last added/modified blog slug
            SLUG=$(git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} _blog.yml 2>/dev/null | grep -A 5 "slug:" | grep "slug:" | tail -n 1 | cut -d'"' -f2)
            if [ -n "$SLUG" ]; then
              echo "slug=$SLUG" >> $GITHUB_OUTPUT
              # Check if this is a new blog or edit
              if git ls-tree -r --name-only ${{ github.event.pull_request.base.sha }} | grep -q "^blogs/$SLUG/"; then
                echo "message=Edits in existing blog detected: \`$SLUG\`" >> $GITHUB_OUTPUT
              else
                echo "message=New blog detected: \`$SLUG\`" >> $GITHUB_OUTPUT
              fi
            else
              echo "message=No blog content changes detected!" >> $GITHUB_OUTPUT
            fi
          else
            echo "message=No blog content changes detected!" >> $GITHUB_OUTPUT
          fi

      - name: Delete old preview comments
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const previewComments = comments.filter(comment => 
              comment.body.includes('Preview Blog') && 
              comment.user.login === 'github-actions[bot]'
            );

            for (const comment of previewComments) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id,
              });
            }

      - name: Comment preview link or status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const message = '${{ steps.find-slug.outputs.message }}';
            const slug = '${{ steps.find-slug.outputs.slug }}';
            const branch = context.payload.pull_request.head.ref;
            const owner = context.payload.pull_request.head.repo.owner.login;
            const repo = context.payload.pull_request.head.repo.name;

            const blogListUrl = `https://www.binapani.com/draft/blog?preview=${branch}&owner=${owner}&repo=${repo}`;
            const blogContentUrl = slug ? `https://www.binapani.com/draft/blog/${slug}?preview=${branch}&owner=${owner}&repo=${repo}` : '';

            let body = `## üëÄ Preview Blog\n\n${message}\n\n`;

            if (!slug) {
              body += `üîç Please check the [guidelines](https://github.com/binapani-edu/blog/blob/main/README.md) for instructions on how to add your blog.\n\n`;
            } else {
              body += `## üîç Preview Links\n\n`;
              body += `üìö [Blog List Preview](${blogListUrl}) - your blog card in the list of all blogs\n`;
              body += `üìù [Blog Content Preview](${blogContentUrl}) - your main blog content\n\n`;
              body += `These links will be updated automatically when you push new changes.\n\n`;
            }

            body += ` ---\n\n`;
            body += `Useful Links | [Binapani Blog](https://www.binapani.com/blog) | [Binapani Blog Preview Tool](https://www.binapani.com/draft/blog)`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
